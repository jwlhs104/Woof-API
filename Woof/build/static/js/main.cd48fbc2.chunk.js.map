{"version":3,"sources":["components/wallet/connectors.js","components/pages/leaderboard.js","components/pages/chooseDog.js","components/pages/dog.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","LeaderBoard","props","className","table","map","object","ChooseDog","dogList","url","index","src","onClick","onChosen","choose","Dog","useWeb3React","account","active","activate","useState","count","setCount","show","setShow","image","setImage","dogId","setDogId","openseaIds","setOpenseaIds","dogUrls","setDogUrls","showChooseDog","setShowChooseDog","chosen","setChosen","leaderboard","setLeaderboard","a","console","log","useEffect","fetch","then","response","json","data","ids","forEach","obj","push","opensea_url","URL","params","token_ids","asset_contract_address","Object","keys","key","Array","isArray","p","searchParams","append","urls","length","id","style","backgroundImage","dog","method","headers","body","JSON","stringify","onTransitionEnd","setDog","getLibrary","provider","Web3","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd48fbc2.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42], \n})\n","import React from 'react';\n\nexport default function LeaderBoard (props) {\n  \n  return(\n    <div className=\"LeaderBoard\">\n      LeaderBoard\n      <table>\n      {\n        props.table.map(object =>{\n          return(\n            <tr>\n              <td>{object['name']}</td>\n              <td>{object['count']}</td>\n            </tr>\n          )\n        })\n      }\n      </table>\n    </div>\n  )\n}\n","import React from 'react';\n\nexport default function ChooseDog(props) {\n  function choose(index){\n    props.onChosen(index)\n  }\n  return (\n    <div className=\"chooseDog\">\n      <div className=\"chooseDogInner\">\n        <div className=\"chooseDogHeader\">Choose Your Fomo Dog!</div>\n        <div className=\"chooseDogFlex\">\n        {\n          props.dogList.map((url, index) => {\n            return(\n              <div className=\"chooseDogImg\">\n                <img src={url} onClick={() => choose(index)}/>\n              </div>\n            )\n          })\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected } from \"../wallet/connectors\"\nimport LeaderBoard from \"./leaderboard\"\nimport ChooseDog from \"./chooseDog\"\n\nexport default function Dog () {\n  const { active, account, activate} = useWeb3React()\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState('');\n  const [dogId, setDogId] = useState('Dog1');\n  const [openseaIds, setOpenseaIds] = useState([]);\n  const [dogUrls, setDogUrls] = useState([]);\n  const [showChooseDog, setShowChooseDog] = useState(false);\n  const [chosen, setChosen] = useState(false);\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(connect_callback, [account])\n  useEffect(chooseDog_callback, [dogUrls])\n\n  function chooseDog_callback(){\n    if (dogUrls.length > 0){\n      setShowChooseDog(true) \n    }\n  }\n\n  function chosen_callback(index){\n    console.log(index)\n    setShowChooseDog(false) \n    setChosen(true)\n    setDog(index)\n  }\n\n  function setDog(index){\n    // set Id\n    const id = openseaIds[index]\n    setDogId(id)\n    const dog = {\"name\":id, \"count\":0};\n    fetch('/add_dog', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"text/json\"},\n      body: JSON.stringify(dog)\n    }).then(data=>{\n      // get count\n      fetch(`/get_dog?name=${id}`)\n      .then(response => response.json())\n      .then(data => {\n        setCount(data['count'])\n      })\n    })\n    // get image\n    fetch(`https://api.opensea.io/api/v1/assets?token_ids=${id}&asset_contract_address=0x90cfCE78f5ED32f9490fd265D16c77a8b5320Bd4`)\n    .then(response => response.json())\n    .then(data => {\n      setImage(data['assets'][0]['image_url'])\n    })\n  }\n\n  async function connect() {\n    try {\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  function connect_callback(){\n    if (typeof account !== 'undefined'){\n      // get account fomo dog\n      fetch(`/get_fomo_dog?address=${account}`)\n      .then(response => response.json())\n      .then(data => {\n\n        // select dog\n        var ids = []\n        data.forEach(obj=>ids.push(obj['token_id']))\n        var opensea_url = new URL('https://api.opensea.io/api/v1/assets')\n        var params = {token_ids: ids, asset_contract_address: \"0x90cfCE78f5ED32f9490fd265D16c77a8b5320Bd4\"}\n        Object.keys(params).forEach(key => {\n          if (Array.isArray(params[key])) {\n            params[key].forEach(p => opensea_url.searchParams.append(key, p)) \n          }\n          else {\n            opensea_url.searchParams.append(key, params[key])\n          }\n        })\n        fetch(opensea_url)\n        .then(response => response.json())\n        .then(data => {\n          var urls = []\n          var ids = []\n          data['assets'].forEach(obj=>{\n            urls.push(obj['image_url'])\n            ids.push(obj['token_id'])\n          })\n          setDogUrls(urls)\n          setOpenseaIds(ids)\n        })\n      })\n    }\n  }\n\n  return(\n    <div className=\"Dog\">\n      {chosen && <div id=\"WoofCount\">{count}</div>}\n      {chosen && <div id=\"WoofClick\" \n        style={{\n            backgroundImage: image!==''? `url(${image})` : 'url(https://fomodog.club/static/media/fomo.c3a49b0a.png)',\n        }}\n        onClick={\n        () => \n        {\n          setCount(count+1)\n          setShow(true)\n\n          const dog = {\"name\": dogId, \"count\":1};\n          fetch('/add_dog', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"text/json\"},\n            body: JSON.stringify(dog)\n          })\n          .then(()=>{\n            fetch('/leaderboard')\n            .then(response => response.json())\n            .then(data => {\n              setLeaderboard(data)\n            })\n          })\n        }\n      }>\n        <div \n          className={show ? 'Woof' : 'Woof hide'}\n          onTransitionEnd={() => {\n            setShow(false)\n          }\n          }\n        >\n          Woof!\n        </div>\n      </div>\n      }\n      {!chosen && <button onClick={connect}>Connect to MetaMask</button>}\n      {chosen && <div id=\"Connect\">Connected with <b>{account}</b></div>}\n      <LeaderBoard table={leaderboard}/>\n      {showChooseDog && <ChooseDog dogList={dogUrls} onChosen={chosen_callback}/>}\n    </div>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport Dog from './components/pages/dog'\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Web3 from 'web3';\n\nfunction getLibrary(provider){\n  return new Web3(provider)\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Dog/>\n        </header>\n      </div>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}