{"version":3,"sources":["components/wallet/connectors.js","components/pages/leaderboard.js","components/pages/dog.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","LeaderBoard","props","className","table","map","object","Dog","useWeb3React","active","account","activate","useState","count","setCount","show","setShow","image","setImage","dogId","setDogId","leaderboard","setLeaderboard","a","console","log","useEffect","fetch","then","response","json","data","id","dog","JSON","stringify","method","headers","body","style","backgroundImage","onClick","onTransitionEnd","getLibrary","provider","Web3","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9e1ba1e.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42], \n})\n","import React from 'react';\n\nexport default function LeaderBoard (props) {\n  \n  return(\n    <div className=\"LeaderBoard\">\n      LeaderBoard\n      <table>\n      {\n        props.table.map(object =>{\n          return(\n            <tr>\n              <td>{object['name']}</td>\n              <td>{object['count']}</td>\n            </tr>\n          )\n        })\n      }\n      </table>\n    </div>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport { useWeb3React } from \"@web3-react/core\"\nimport { injected } from \"../wallet/connectors\"\nimport LeaderBoard from \"./leaderboard\"\n\nexport default function Dog () {\n  const { active, account, activate} = useWeb3React()\n  const [count, setCount] = useState(0);\n  const [show, setShow] = useState(false);\n  const [image, setImage] = useState('');\n  const [dogId, setDogId] = useState('Dog1');\n  const [leaderboard, setLeaderboard] = useState([]);\n\n  useEffect(connect_callback, [account])\n\n  async function connect() {\n    try {\n      await activate(injected)\n    } catch (ex) {\n      console.log(ex)\n    }\n  }\n\n  function connect_callback(){\n    if (typeof account !== 'undefined'){\n      // get account fomo dog\n      fetch(`/get_fomo_dog?address=${account}`)\n      .then(response => response.json())\n      .then(data => {\n        const id = data[0]['token_id']\n        // set Id\n        setDogId(id)\n        const dog = {\"name\":id, \"count\":0};\n        console.log(JSON.stringify(dog))\n        fetch('/add_dog', {\n          method: 'POST',\n          headers: { \"Content-Type\": \"text/json\"},\n          body: JSON.stringify(dog)\n        })\n\n        // get count\n        fetch(`/get_dog?name=${id}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data['count'])\n          setCount(data['count'])\n        })\n\n        // get image\n        fetch(`https://api.opensea.io/api/v1/assets?token_ids=${id}&asset_contract_address=0x90cfCE78f5ED32f9490fd265D16c77a8b5320Bd4`)\n        .then(response => response.json())\n        .then(data => setImage(data['assets'][0]['image_url']))\n      })\n    }\n  }\n\n  return(\n    <div className=\"Dog\">\n      {active && <div id=\"WoofCount\">{count}</div>}\n      {active && <div id=\"WoofClick\" \n        style={{\n            backgroundImage: image!==''? `url(${image})` : 'url(https://fomodog.club/static/media/fomo.c3a49b0a.png)',\n        }}\n        onClick={\n        () => \n        {\n          setCount(count+1)\n          setShow(true)\n\n          const dog = {\"name\": dogId, \"count\":1};\n          fetch('/add_dog', {\n            method: 'POST',\n            headers: { \"Content-Type\": \"text/json\"},\n            body: JSON.stringify(dog)\n          })\n          .then(()=>{\n            fetch('/leaderboard')\n            .then(response => response.json())\n            .then(data => {\n              setLeaderboard(data)\n            })\n          })\n        }\n      }>\n        <div \n          className={show ? 'Woof' : 'Woof hide'}\n          onTransitionEnd={() => {\n            setShow(false)\n          }\n          }\n        >\n          Woof!\n        </div>\n      </div>\n      }\n      {!active && <button onClick={connect}>Connect to MetaMask</button>}\n      {active && <div id=\"Connect\">Connected with <b>{account}</b></div>}\n      <LeaderBoard table={leaderboard}/>\n    </div>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport Dog from './components/pages/dog'\nimport { Web3ReactProvider } from '@web3-react/core';\nimport Web3 from 'web3';\n\nfunction getLibrary(provider){\n  return new Web3(provider)\n}\n\nfunction App() {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Dog/>\n        </header>\n      </div>\n    </Web3ReactProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}